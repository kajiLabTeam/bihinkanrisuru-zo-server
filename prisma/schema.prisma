// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EquipmentStatus {
  AVAILABLE
  BORROWED
  LOST
}

enum UserStatus {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id                 String               @id @db.VarChar(256)
  name               String               @unique @db.VarChar(256)
  status             UserStatus           @default(PENDING)
  createdAt          DateTime             @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt          DateTime             @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt          DateTime?            @map("deleted_at") @db.Timestamp(0)
  EquipmentBorrowLog EquipmentBorrowLog[]

  @@map("users")
}

model Equipment {
  id           String          @id @default(cuid())
  assetId      String          @db.VarChar(256)
  name         String          @unique @db.VarChar(256)
  place        String          @db.VarChar(256)
  status       EquipmentStatus @default(AVAILABLE)
  purchaseDate DateTime        @default(now()) @map("purchase_at") @db.Timestamp(0)
  createdAt    DateTime        @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime        @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt    DateTime?       @map("deleted_at") @db.Timestamp(0)

  EquipmentTag       EquipmentTag[]
  EquipmentBorrowLog EquipmentBorrowLog[]

  @@map("equipments")
}

model Tag {
  id           String         @id @default(cuid())
  name         String         @unique @db.VarChar(256)
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime       @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt    DateTime?      @map("deleted_at") @db.Timestamp(0)
  EquipmentTag EquipmentTag[]

  @@map("tags")
}

model EquipmentBorrowLog {
  borrowedAt DateTime  @default(now()) @map("borrowed_at") @db.Timestamp(0)
  returnedAt DateTime? @map("returned_at") @db.Timestamp(0)

  userId      String @map("user_id")
  equipmentId String @map("equipment_id")

  User      User      @relation(fields: [userId], references: [id])
  Equipment Equipment @relation(fields: [equipmentId], references: [id])

  @@id([userId, equipmentId, borrowedAt])
  @@unique([userId, equipmentId, borrowedAt])
  @@map("equipment_borrow_logs")
}

model EquipmentTag {
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt DateTime? @map("deleted_at") @db.Timestamp(0)

  equipmentId String @map("equipment_id")
  tagId       String @map("tag_id")

  equipment Equipment @relation(fields: [equipmentId], references: [id])
  tag       Tag       @relation(fields: [tagId], references: [id])

  @@id([equipmentId, tagId])
  @@map("equipment_tags")
}
